SSLStaplingCache shmcb:/tmp/stapling_cache(128000)

<VirtualHost 172.31.60.62:443>
	Servername jump.wtf
	ServerAlias jump.wtf
	
	KeepAlive on

        ErrorLog /var/log/jump/error.log
        CustomLog /var/log/jump/access.log combined

	
	SSLEngine on
	SSLCertificateFile /etc/ssl/certs/jump.wtf.crt
	SSLCertificateKeyFile /etc/ssl/private/jump.wtf.key
	SSLCACertificateFile /etc/ssl/ca-bundle/jump.wtf.ca-bundle
	SSLUseStapling on

	SSLProtocol all -SSLv2 -SSLv3
	#SSLCipherSuite ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM:+LOW
	SSLHonorCipherOrder On
	SSLCipherSuite ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	SetEnvIf User-Agent ".*MSIE.*" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0

	<FilesMatch "\.(cgi|shtmk|phtml|php|hh)">
		SSLOptions +StdEnvVars
	</FilesMatch>
		
	Header always set Strict-Transport-Security "max-age=16070400"
	#; includesubdomains"

	RewriteEngine on
	
	# redirect to blackhole
	RewriteRule ^/admin/.*$ b/index.php [L]
	RewriteRule ^/cgi-bin/.*$ b/index.php [L]

	# hide php extension
	RewriteRule ^/i?$ /i.php [L]
	RewriteRule ^/r$ /r.php [L]
	RewriteRule ^/s$ /s.php [L]
	RewriteRule ^/([^/]+)$ /g.php?l=$1 [L]

	DirectoryIndex i.php

	DocumentRoot /var/www/jump

	<Directory /var/www/jump>

		Options +FollowSymLinks
		AllowOverride All options=all

		AuthType None

		<Limit GET POST OPTIONS>
			order allow,deny
			allow from all            
		</Limit>
		<LimitExcept GET POST OPTIONS>
			Order deny,allow
			Deny from all
		</LimitExcept>

		AddType text/css .css
		AddType text/javascript .ja
	
		<IfModule mod_headers.c>
			Header set Access-Control-Allow-Origin "*"
		</IfModule>

		<IfModule mod_setenvif.c>
			<IfModule mod_headers.c>
				<FilesMatch "\.(cur|gif|ico|jpe?g|png|svgz?|webp)$">
					SetEnvIf Origin ":" IS_CORS
					Header set Access-Control-Allow-Origin "*" env=IS_CORS
				</FilesMatch>
			</IfModule>
		</IfModule>

		<IfModule mod_headers.c>
			<FilesMatch "\.(eot|otf|tt[cf]|woff)$">
				Header set Access-Control-Allow-Origin "*"
			</FilesMatch>
		</IfModule>

		<IfModule mod_headers.c>
			Header set X-UA-Compatible "IE=edge"
			# `mod_headers` cannot match based on the content-type, however, this
			# header should be send only for HTML pages and not for the other resources
			<FilesMatch "\.(appcache|atom|crx|css|cur|eot|f4[abpv]|flv|gif|htc|ico|jpe?g|js|json(ld)?|m4[av]|manifest|map|mp4|oex|og[agv]|opus|otf|pdf|png|rdf|rss|safariextz|svgz?|swf|tt[cf]|vcf|vtt|webapp|web[mp]|woff|xml|xpi)$">
				Header unset X-UA-Compatible
			</FilesMatch>
		</IfModule>
	
		<IfModule mod_mime.c>

			# Audio
			AddType audio/mp4                                   m4a f4a f4b
			AddType audio/ogg                                   oga ogg opus
		
			# Data interchange
			AddType application/json                            json map
			AddType application/ld+json                         jsonld

			# JavaScript
			# Normalize to standard type.
			# http://tools.ietf.org/html/rfc4329#section-7.2
			AddType application/javascript                      js

			# Video
			AddType video/mp4                                   f4v f4p m4v mp4
			AddType video/ogg                                   ogv
			AddType video/webm                                  webm
			AddType video/x-flv                                 flv
		
			# Web fonts
			AddType application/font-woff                       woff
			AddType application/vnd.ms-fontobject               eot
		
			# Browsers usually ignore the font MIME types and simply sniff the bytes
			# to figure out the font type.
			# http://mimesniff.spec.whatwg.org/#matching-a-font-type-pattern
		
			# Chrome however, shows a warning if any other MIME types are used for
			# the following fonts.
		
			AddType application/x-font-ttf                      ttc ttf
			AddType font/opentype                               otf
		
			# Make SVGZ fonts work on the iPad.
			# https://twitter.com/FontSquirrel/status/14855840545
			AddType     image/svg+xml                           svgz
			AddEncoding gzip                                    svgz
		
			# Other
			AddType application/octet-stream                    safariextz
			AddType application/x-chrome-extension              crx
			AddType application/x-opera-extension               oex
			AddType application/x-web-app-manifest+json         webapp
			AddType application/x-xpinstall                     xpi
			AddType application/xml                             atom rdf rss xml
			AddType image/webp                                  webp
			AddType image/x-icon                                cur
			AddType text/cache-manifest                         appcache manifest
			AddType text/vtt                                    vtt
			AddType text/x-component                            htc
			AddType text/x-vcard                                vcf

		</IfModule>

		# Force UTF-8 for certain file formats.
		AddDefaultCharset utf-8

		<IfModule mod_mime.c>
			AddCharset utf-8 .atom .css .js .json .jsonld .rss .vtt .webapp .xml
		</IfModule>

		<IfModule mod_headers.c>
			Header set X-Frame-Options "DENY"
			<FilesMatch "\.(appcache|atom|crx|css|cur|eot|f4[abpv]|flv|gif|htc|ico|jpe?g|js|json(ld)?|m4[av]|manifest|map|mp4|oex|og[agv]|opus|otf|pdf|png|rdf|rss|safariextz|svgz?|swf|tt[cf]|vcf|vtt|webapp|web[mp]|woff|xml|xpi)$">
				Header unset X-Frame-Options
			</FilesMatch>
		</IfModule>
	
		# Block access to directories without a default document.
		<IfModule mod_autoindex.c>
			Options -Indexes
		</IfModule>
	
		# Block access to hidden files and directories.
		<IfModule mod_rewrite.c>
			RewriteCond %{SCRIPT_FILENAME} -d [OR]
			RewriteCond %{SCRIPT_FILENAME} -f
			RewriteRule "(^|/)\." - [F]
		</IfModule>

		# Block access to files that can expose sensitive information.
		<FilesMatch "(^#.*#|\.(bak|config|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$">
			# Apache < 2.3
			<IfModule !mod_authz_core.c>
				Order allow,deny
				Deny from all
				Satisfy All
			</IfModule>
	
			# Apache â‰¥ 2.3
			<IfModule mod_authz_core.c>
				Require all denied
			</IfModule>
	
		</FilesMatch>
	
		# Prevent some browsers from MIME-sniffing the response.
		<IfModule mod_headers.c>
			Header set X-Content-Type-Options "nosniff"
		</IfModule>
	
		# Reflected Cross-Site Scripting (XSS) attacks                               |
		<IfModule mod_headers.c>
		Header set X-XSS-Protection "1; mode=block"
			<FilesMatch "\.(appcache|atom|crx|css|cur|eot|f4[abpv]|flv|gif|htc|ico|jpe?g|js|json(ld)?|m4[av]|manifest|map|mp4|oex|og[agv]|opus|otf|pdf|png|rdf|rss|safariextz|svgz?|swf|tt[cf]|vcf|vtt|webapp|web[mp]|woff|xml|xpi)$">
				Header unset X-XSS-Protection
			</FilesMatch>
		</IfModule>
	
	
	
	
		# Compression                                                                |
		<IfModule mod_deflate.c>
	
			# Force compression for mangled headers.
			# http://developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping
			<IfModule mod_setenvif.c>
				<IfModule mod_headers.c>
					SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
					RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
				</IfModule>
			</IfModule>
	
			# Compress all output labeled with one of the following MIME-types
			# (for Apache versions below 2.3.7, you don't need to enable `mod_filter`
			#  and can remove the `<IfModule mod_filter.c>` and `</IfModule>` lines
			#  as `AddOutputFilterByType` is still in the core directives).
			<IfModule mod_filter.c>
				AddOutputFilterByType DEFLATE application/atom+xml \
					application/javascript \
					application/json \
					application/ld+json \
					application/rss+xml \
					application/vnd.ms-fontobject \
					application/x-font-ttf \
					application/x-web-app-manifest+json \
					application/xhtml+xml \
					application/xml \
					font/opentype \
					image/svg+xml \
					image/x-icon \
					text/css \
					text/html \
					text/plain \
					text/x-component \
					text/xml
			</IfModule>

		</IfModule>

		# Prevent mobile network providers from modifying the website's content.
		<IfModule mod_headers.c>
			Header set Cache-Control "no-transform"
		</IfModule>
	
		# Remove `ETags` as resources are sent with far-future expires headers.
		<IfModule mod_headers.c>
			Header unset ETag
		</IfModule>
	
		FileETag None
	
		# Expires headers                                                            
		<IfModule mod_expires.c>
			ExpiresActive on
			ExpiresDefault                                      "access plus 1 month"
	
			# CSS
#			ExpiresByType text/css                              "access plus 1 year"
	
			# Favicon (cannot be renamed!) and cursor images
#			ExpiresByType image/x-icon                          "access plus 1 week"
	
			# HTML components (HTCs)
#			ExpiresByType text/x-component                      "access plus 1 month"
	
			# HTML
			ExpiresByType text/html                             "access plus 0 seconds"
	
			# JavaScript
			ExpiresByType application/javascript                "access plus 1 year"
	
			ExpiresByType image/gif                             "access plus 1 month"
			ExpiresByType image/jpeg                            "access plus 1 month"
			ExpiresByType image/png                             "access plus 1 month"
	
			# Web fonts
#			ExpiresByType application/font-woff                 "access plus 1 month"
#			ExpiresByType application/vnd.ms-fontobject         "access plus 1 month"
#			ExpiresByType application/x-font-ttf                "access plus 1 month"
#			ExpiresByType font/opentype                         "access plus 1 month"
#			ExpiresByType image/svg+xml                         "access plus 1 month"
		</IfModule>
	</Directory>
</VirtualHost>
